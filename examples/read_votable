#!/usr/bin/perl -w

use v5.24;
use warnings;

# read_votable - Sample program illustrating the use of the VOTable
# modules to read a VOTABLE document and access its parts.

# External modules
use Astro::VO::VOTable;

# Read the VOTABLE document.
defined $ARGV[0] or die( "usage: $0 <filename>\n" );
my $doc = Astro::VO::VOTable::Document->new_from_file($ARGV[0]) or die;

# Get the (only) VOTABLE element.
my $votable = $doc->get_VOTABLE or die;

# Get the first RESOURCE element.
my $resource = $votable->get_RESOURCE(0) or die;

# Get the first DESCRIPTION element and its contents.
my $description = $resource->get_DESCRIPTION(0) or die;
say $description->get;

# Get the first TABLE element.
my $table = $resource->get_TABLE(0) or die;

# Get the FIELD elements.
my @field_names = map { $_->get_name } $table->get_FIELD;
say "field names are @field_names";

# Get the DATA element.
my $data = $table->get_DATA or die;

# Get the TABLEDATA element.
my $tabledata = $data->get_TABLEDATA or die;

# Get each TR element, then each TD element, and print its contents.
my $i = 0;
for my $tr ($tabledata->get_TR) {
    say "Data for target ", $i++;
    my $j = 0;
    say  $field_names[$j++], ' = ', $_->get
      foreach $tr->get_TD;
}

# Now go back and do it a little easier.

# Get the number of table rows.
my $num_rows = $table->get_num_rows or die;
say "num_rows = $num_rows";

# Print a table.

# Create the table header.
say join("\t", ('i', @field_names));
say join("\t", $_, $table->get_row($_) )
  for 0 .. $num_rows-1;

# Now go back and get the entire data table in one fell swoop.
my $rows = $table->get_array or die;
my $i = 0;
for my $row ( $rows->@* ) {
    my $j = 0;
    say "i = ", $i, ", j = ", $j++, ", cell = $_"
      for $row->@*;
    ++$i;
}

# Now go back and get the contents one cell at a time.
print "\n";
for my $i ( keys $rows->@* ) {
    for my $j ( keys $rows->[$i]->@* ) {
 	say "i = $i, j = $j, cell = ", $table->get_cell($i, $j);
    }
}
